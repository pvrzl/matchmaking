// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package health is a generated GoMock package.
package health

import (
	entity "app/internal/entity"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHealthRepo is a mock of HealthRepo interface.
type MockHealthRepo struct {
	ctrl     *gomock.Controller
	recorder *MockHealthRepoMockRecorder
}

// MockHealthRepoMockRecorder is the mock recorder for MockHealthRepo.
type MockHealthRepoMockRecorder struct {
	mock *MockHealthRepo
}

// NewMockHealthRepo creates a new mock instance.
func NewMockHealthRepo(ctrl *gomock.Controller) *MockHealthRepo {
	mock := &MockHealthRepo{ctrl: ctrl}
	mock.recorder = &MockHealthRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthRepo) EXPECT() *MockHealthRepoMockRecorder {
	return m.recorder
}

// GetRedisHealth mocks base method.
func (m *MockHealthRepo) GetRedisHealth(ctx context.Context) entity.Status {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRedisHealth", ctx)
	ret0, _ := ret[0].(entity.Status)
	return ret0
}

// GetRedisHealth indicates an expected call of GetRedisHealth.
func (mr *MockHealthRepoMockRecorder) GetRedisHealth(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRedisHealth", reflect.TypeOf((*MockHealthRepo)(nil).GetRedisHealth), ctx)
}

// GetdbRHealth mocks base method.
func (m *MockHealthRepo) GetdbRHealth(ctx context.Context) entity.Status {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetdbRHealth", ctx)
	ret0, _ := ret[0].(entity.Status)
	return ret0
}

// GetdbRHealth indicates an expected call of GetdbRHealth.
func (mr *MockHealthRepoMockRecorder) GetdbRHealth(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetdbRHealth", reflect.TypeOf((*MockHealthRepo)(nil).GetdbRHealth), ctx)
}

// GetdbWHealth mocks base method.
func (m *MockHealthRepo) GetdbWHealth(ctx context.Context) entity.Status {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetdbWHealth", ctx)
	ret0, _ := ret[0].(entity.Status)
	return ret0
}

// GetdbWHealth indicates an expected call of GetdbWHealth.
func (mr *MockHealthRepoMockRecorder) GetdbWHealth(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetdbWHealth", reflect.TypeOf((*MockHealthRepo)(nil).GetdbWHealth), ctx)
}
